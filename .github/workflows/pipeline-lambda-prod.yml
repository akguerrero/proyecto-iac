name: IaC Terraform Lambdas APPCrypto PROD

on:
  push:
    branches:
     - develop
    #paths-ignore: [ '.github/**', '.gitignore' ]
    paths:
      - 'environments/prod/**'
env:
  PROJECT: ${{ github.event.repository.name }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
  AWS_REGION: ${{ secrets.AWS_REGION }}  


jobs:
  clean:
    runs-on: self-hosted
    steps:
      - name: Copia repositorio
        uses: actions/checkout@v2
        with:
          ref: develop

  Despliegue_Terraform:
    runs-on: self-hosted
    needs: clean
    if: contains(github.event.head_commit.message, 'lambda-prod')

    steps:
      - name: Configurando credenciales para AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
        working-directory: ./environments/prod
        run: |
            terraform init -input=false
    
        # Generates an execution plan for Terraform
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
        working-directory: ./environments/prod
        run: terraform plan -input=false -out="main.tfplan"

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
        working-directory: ./environments/prod
        run: terraform apply -auto-approve "main.tfplan"

  Destroy_Terraform:
    runs-on: self-hosted
    needs: clean
    if: contains(github.event.head_commit.message, 'lambda-destroy-prod')

    steps:
      - name: Configurando credenciales para AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Terraform Init Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
        working-directory: ./environments/prod
        run: |
            terraform init -input=false
    
        # Generates an execution plan for Terraform
      - name: Terraform Plan Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
        working-directory: ./environments/prod
        run: terraform plan -input=false -out="main.tfplan"

#      - name: Terraform Destroy Destroy
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CAPP_PROD }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CAPP_PROD }}
#        working-directory: ./environments/prod
#        run: terraform destroy -auto-approve  -target module.AppCryp_Access_Security_Login-test 